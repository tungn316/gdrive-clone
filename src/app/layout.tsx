import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import { ConvexClientProvider } from "./ConvexClientProvider";
import { NextSSRPlugin } from '@uploadthing/react/next-ssr-plugin';
import { extractRouterConfig } from 'uploadthing/server';
import { ourFileRouter } from '@/app/api/uploadthing/core'
import { ClerkProvider } from '@clerk/nextjs'
import { dark } from '@clerk/themes';

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <ClerkProvider appearance={{
      baseTheme: dark, // Apply the dark theme globally
      elements: {
        formButtonPrimary: "bg-blue-600 hover:bg-blue-700",
        socialButtonsBlockButton: "bg-gray-700 hover:bg-gray-600 border-gray-600",
        card: "bg-gray-800", // Example: if card needs custom styling not covered by dark theme
        rootBox: "justify-center" // Helps with centering
      }
    }}>
      <html lang="en">
        <body
          className={`${geistSans.variable} ${geistMono.variable} antialiased`}
        >
          <ClerkProvider>
            <ConvexClientProvider>
              <NextSSRPlugin routerConfig={extractRouterConfig(ourFileRouter)} />
              {children}
            </ConvexClientProvider>
          </ClerkProvider>
        </body>
      </html>
    </ClerkProvider>
  );
}
